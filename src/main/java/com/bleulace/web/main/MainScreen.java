package com.bleulace.web.main;

import java.util.Map;

import javax.annotation.PostConstruct;

import com.bleulace.domain.resource.model.AbstractResource;
import com.bleulace.jpa.TxContainerFactory;
import com.bleulace.web.stereotype.UIComponent;
import com.google.gwt.dev.util.collect.HashMap;
import com.vaadin.addon.jpacontainer.JPAContainer;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalSplitPanel;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TabSheet.CloseHandler;
import com.vaadin.ui.TabSheet.Tab;
import com.vaadin.ui.Tree;
import com.vaadin.ui.VerticalLayout;

@UIComponent("mainScreen")
public class MainScreen extends CustomComponent
{

	/*- VaadinEditorProperties={"grid":"RegularGrid,10","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private HorizontalSplitPanel panel;

	@AutoGenerated
	private TabSheet tabSheet;

	@AutoGenerated
	private VerticalLayout panelLayout;

	@AutoGenerated
	private Tree resourceTree;

	// Key : tab position, Value: resourceId
	private final Map<Integer, String> openTabs = new HashMap<Integer, String>();

	private final JPAContainer<AbstractResource> container = TxContainerFactory
			.make(AbstractResource.class);

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public MainScreen()
	{
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	@PostConstruct
	protected void init()
	{
		container.setParentProperty("parent");

		resourceTree.setImmediate(true);
		resourceTree.setContainerDataSource(container);
		resourceTree.addValueChangeListener(new ValueChangeListener()
		{
			@Override
			public void valueChange(ValueChangeEvent event)
			{
				String id = (String) event.getProperty().getValue();
				if (id != null && !openTabs.values().contains(id))
				{
					Tab tab = tabSheet.addTab(ResourceContentFactory
							.make((container.getItem(id).getEntity())));
					tab.setCaption(id);
					tab.setClosable(true);
					openTabs.put(tabSheet.getTabPosition(tab), id);
					tabSheet.setSelectedTab(tab);
				}
			}
		});

		tabSheet.setCloseHandler(new CloseHandler()
		{
			@Override
			public void onTabClose(TabSheet tabsheet, Component tabContent)
			{
				Integer position = tabSheet.getTabPosition(tabSheet
						.getTab(tabContent));
				openTabs.remove(position);
				tabSheet.removeComponent(tabContent);
			}
		});
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout()
	{
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// panel
		panel = buildPanel();
		mainLayout.addComponent(panel, "top:0.0px;left:0.0px;");

		return mainLayout;
	}

	@AutoGenerated
	private HorizontalSplitPanel buildPanel()
	{
		// common part: create layout
		panel = new HorizontalSplitPanel();
		panel.setImmediate(false);
		panel.setWidth("100.0%");
		panel.setHeight("100.0%");

		// panelLayout
		panelLayout = buildPanelLayout();
		panel.addComponent(panelLayout);

		// tabSheet
		tabSheet = new TabSheet();
		tabSheet.setImmediate(false);
		tabSheet.setWidth("100.0%");
		tabSheet.setHeight("-1px");
		panel.addComponent(tabSheet);

		return panel;
	}

	@AutoGenerated
	private VerticalLayout buildPanelLayout()
	{
		// common part: create layout
		panelLayout = new VerticalLayout();
		panelLayout.setImmediate(false);
		panelLayout.setWidth("-1px");
		panelLayout.setHeight("-1px");
		panelLayout.setMargin(false);

		// resourceTree
		resourceTree = new Tree();
		resourceTree.setImmediate(false);
		resourceTree.setWidth("-1px");
		resourceTree.setHeight("100.0%");
		panelLayout.addComponent(resourceTree);

		return panelLayout;
	}
}